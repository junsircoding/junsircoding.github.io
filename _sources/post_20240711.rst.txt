在新机器安装 Docker 以及代理配置
========================================

步骤
-------

在 Fedora 上使用 Yum 安装 Docker 时，需要先添加 Fedora 的 Docker repo 源，有时可能因为网络原因无法成功。
这时可以配置 ``/etc/enviroment`` 文件，让 yum 走代理网络：

1. 在 ``/etc/enviroment`` 添加如下内容：

.. code-block:: shell
   :linenos:

   http_proxy=127.0.0.1:1234
   https_proxy=127.0.0.1:1234

2. 添加 Docker Yum 源：

.. code-block:: shell
   :linenos:

   sudo yum-config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

3. 查看当前系统添加的所有 Yum 源：

.. code-block:: shell
   :linenos:

   sudo yum repolist
   # 结果
   repo id                                                                                          repo name
   docker-ce-stable                                                                                 Docker CE Stable - x86_64
   fedora                                                                                           Fedora 40 - x86_64
   fedora-cisco-openh264                                                                            Fedora 40 openh264 (From Cisco) - x86_64
   updates                                                                                          Fedora 40 - x86_64 - Updates
   
4. 安装 Docker ：

.. code-block:: shell
   :linenos:

   sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

5. 启动 Docker 服务：

.. code-block:: shell
   :linenos:

   sudo systemctl start docker

6. 配置 Docker pull 代理:

.. code-block:: shell
   :linenos:

   sudo mkdir -p /etc/systemd/system/docker.service.d
   sudo touch /etc/systemd/system/docker.service.d/proxy.conf

   # 在其中写入如下配置：
   [Service]
   Environment="HTTP_PROXY=http://127.0.0.1:1234/"
   Environment="HTTPS_PROXY=http://127.0.0.1:1234/"
   Environment="NO_PROXY=localhost,127.0.0.1,.example.com"

7. 重启 systemctl 以及 Docker：

.. code-block:: shell
   :linenos:

   sudo systemctl daemon-reload
   sudo systemctl restart docker

8. 测试 hello-world ：

.. code-block:: shell
   :linenos:

   sudo docker run hello-world


.. code-block:: shell
   :linenos:
   
   结果：

   Unable to find image 'hello-world:latest' locally
   latest: Pulling from library/hello-world
   c1ec31eb5944: Pull complete 
   Digest: sha256:1408fec50309afee38f3535383f5b09419e6dc0925bc69891e79d84cc4cdcec6
   Status: Downloaded newer image for hello-world:latest
   
   Hello from Docker!
   This message shows that your installation appears to be working correctly.
   
   To generate this message, Docker took the following steps:
    1. The Docker client contacted the Docker daemon.
    2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
       (amd64)
    3. The Docker daemon created a new container from that image which runs the
       executable that produces the output you are currently reading.
    4. The Docker daemon streamed that output to the Docker client, which sent it
       to your terminal.
   
   To try something more ambitious, you can run an Ubuntu container with:
    $ docker run -it ubuntu bash
   
   Share images, automate workflows, and more with a free Docker ID:
    https://hub.docker.com/
   
   For more examples and ideas, visit:
    https://docs.docker.com/get-started/

9. 设置 Docker 开机自启动：

.. code-block:: shell
   :linenos:

   sudo systemctl enable docker

10. 将普通用户添加进 Docker 组：

.. code-block:: shell
   :linenos:

   sudo usermod -aG docker junsircoding

   # 重启
   

参考资料
----------------

Docker的三种网络代理配置：https://note.qidong.name/2020/05/docker-proxy/
